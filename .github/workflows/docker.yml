name: Run Android Test with Docker image

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the target environment"
        required: true
        type: choice
        options:
          - CA2 VN
          - CA2 BIZ
          - CA VN
          - CA BIZ
          - Staging VN
          - Staging BIZ
          - Production VN
          - Production BIZ
        default: "Staging VN"
      testType:
        description: "Select the test type"
        required: true
        type: choice
        options:
          - Smoke Test
          - Regression Test
        default: "Smoke Test"
      test_configs:
        description: >
          List of test configurations (JSON format). 
          Example: 
          [
            "DashboardLoginTest.xml",
            "DashboardSupplierTest.xml",
            "DashboardCreateProductTest.xml",
            "DashboardUpdateProductTest.xml",
            "DashboardProductManagementTest.xml",
            "StorefrontProductDetailTest.xml",
            "AndroidGoSELLERCreateProductTest.xml",
            "AndroidGoSELLERUpdateProductTest.xml",
            "AndroidGoSELLERProductManagement.xml",
            "AndroidGoSELLERSupplierTest.xml",
            "AndroidGoBuyerProductDetail.xml"
          ]
        required: true
        type: string
        default: '[]'

run-name: "[${{ github.event.inputs.environment }}][${{ github.event.inputs.testType }}] Run android test with Docker image ${{ github.event.inputs.test_configs }}"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.environment }}-${{ github.event.inputs.testType }}-${{ github.event.inputs.test_configs }}
  cancel-in-progress: true

jobs:
  JOB:
    env:
      TEST_TYPE: ${{ github.event.inputs.testType == 'Smoke Test' && 'smoke' || 'regression' }}
    strategy:
      fail-fast: false
      matrix:
        xmlConfiguration: ${{ fromJson(inputs.test_configs) }}

    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Set User Type
        run: |
          test_name=$(basename "${{ matrix.xmlConfiguration }}" .xml)
          echo "test_name=$test_name" >> $GITHUB_ENV
          if echo "$test_name" | grep -qE "SELLER"; then
            user_type="seller"
          else
            user_type="buyer"
          fi
          echo "user_type=$user_type" >> $GITHUB_ENV

      - name: Set Platform and Docker hub repository
        run: |
          if [[ ! "${{ matrix.xmlConfiguration }}" =~ "IOS" && ! "${{ matrix.xmlConfiguration }}" =~ "Android" ]]; then
            echo "dockerRepo=thangnguyen0495/chrome-selenium:latest" >> $GITHUB_ENV
            echo "platform=web" >> $GITHUB_ENV
          elif [[ "${{ matrix.xmlConfiguration }}" =~ "Android" ]]; then
            echo "dockerRepo=thangnguyen0495/android-appium:latest" >> $GITHUB_ENV
            echo "platform=android" >> $GITHUB_ENV
          fi

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Start Docker Container
        run: |
          docker run -d --name container --privileged \
            -v ${{ github.workspace }}:/app \
            ${{ env.dockerRepo }}

      - name: Start emulator and appium by bash scripts
        if: contains(matrix.xmlConfiguration, 'Android')
        run: |
          docker exec container chmod +x /app/entrypoint.sh
          docker exec container /app/entrypoint.sh

      - name: Run Maven Install inside Container
        run: |
          docker exec container bash -c "cd /app && mvn install -DskipTests"

      - name: Run Maven Tests inside Container
        run: |
          docker exec container bash -c "
            cd /app && \
            mvn install -DskipTests && \
            echo '${{ secrets.ENV_FILES }}' > src/main/resources/config.properties && \
            echo '${{ vars.APP_URL }}' >> src/main/resources/config.properties && \
            echo '${{ vars.REUSE_VARIABLE }}' >> src/main/resources/config.properties && \
            mvn test -DsuiteFile=src/test/resources/${{ env.TEST_TYPE }}/${{ env.platform }}/${{ env.user_type }}/${{ matrix.xmlConfiguration }}"

      - name: Copy Test Reports from Container
        if: always()
        run: docker cp container:/app/target/ExtentReport.html ./${{ env.test_name }}.html

      - name: Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.test_name }}
          path: ./${{ env.test_name }}.html
