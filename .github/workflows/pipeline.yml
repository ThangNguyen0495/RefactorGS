name: Automation pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the target environment"
        required: true
        type: choice
        options:
          - CA2 VN
          - CA2 BIZ
          - CA VN
          - CA BIZ
          - Staging VN
          - Staging BIZ
          - Production VN
          - Production BIZ
        default: "Staging VN"
      testType:
        description: "Select the test type"
        required: true
        type: choice
        options:
          - Smoke Test
          - Regression Test
        default: "Smoke Test"
      platform:
        description: "Select the test platform"
        required: true
        type: choice
        options:
          - All Platforms
          - Dashboard
          - StoreFront
          - Android Seller
          - Android Buyer
          - iOS Seller
          - iOS Buyer
        default: "All Platforms"

run-name: "[${{ github.event.inputs.environment }}][${{ github.event.inputs.testType }}][${{ github.event.inputs.platform }}] Automation pipeline"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.inputs.environment }}-${{ github.event.inputs.testType }}-${{ github.event.inputs.platform }}
  cancel-in-progress: true

jobs:
  Dashboard:
    env:
      TEST_TYPE: ${{ github.event.inputs.testType == 'Smoke Test' && 'smoke' || 'regression' }}
    strategy:
      fail-fast: false
      matrix:
        test_config_path:
          - DashboardLoginTest.xml
          - DashboardSupplierTest.xml
          - DashboardCreateProductTest.xml
          - DashboardUpdateProductTest.xml
          - DashboardProductManagementTest.xml
    runs-on: ubuntu-latest
    if: github.event.inputs.platform == 'Dashboard' || github.event.inputs.platform == 'All Platforms'
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Extract test name from config path
        run: |
          test_name=$(basename "${{ matrix.test_config_path }}" .xml)
          echo "test_name=$test_name" >> $GITHUB_ENV

      - uses: ThangNguyen0495/execute-selenium-test@main
        with:
          test_name: ${{ env.test_name }}
          scripts: |
            echo '${{ secrets.ENV_FILES }}' > src/main/resources/config.properties
            echo '${{ vars.REUSE_VARIABLE }}' >> src/main/resources/config.properties
            mvn test "-DsuiteFile=src/test/resources/${{ env.TEST_TYPE }}/web/seller/${{ matrix.test_config_path }}"

  StoreFront:
    env:
      TEST_TYPE: ${{ github.event.inputs.testType == 'Smoke Test' && 'smoke' || 'regression' }}
    strategy:
      fail-fast: false
      matrix:
        test_config_path:
          - StorefrontProductDetailTest.xml
    runs-on: ubuntu-latest
    if: github.event.inputs.platform == 'StoreFront' || github.event.inputs.platform == 'All Platforms'
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Extract test name from config path
        run: |
          test_name=$(basename "${{ matrix.test_config_path }}" .xml)
          echo "test_name=$test_name" >> $GITHUB_ENV

      - uses: ThangNguyen0495/execute-selenium-test@main
        with:
          test_name: ${{ env.test_name }}
          scripts: |
            echo '${{ secrets.ENV_FILES }}' > src/main/resources/config.properties
            echo '${{ vars.REUSE_VARIABLE }}' >> src/main/resources/config.properties
            mvn test "-DsuiteFile=src/test/resources/${{ env.TEST_TYPE }}/web/buyer/${{ matrix.test_config_path }}"

  AndroidSeller:
    env:
      TEST_TYPE: ${{ github.event.inputs.testType == 'Smoke Test' && 'smoke' || 'regression' }}
    strategy:
      fail-fast: false
      matrix:
        test_config_path:
          - AndroidGoSELLERCreateProductTest.xml
          - AndroidGoSELLERUpdateProductTest.xml
          - AndroidGoSELLERSupplierTest.xml
    runs-on: ubuntu-latest
    if: github.event.inputs.platform == 'Android Seller' || github.event.inputs.platform == 'All Platforms'
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Extract test name from config path
        run: |
          test_name=$(basename "${{ matrix.test_config_path }}" .xml)
          echo "test_name=$test_name" >> $GITHUB_ENV

      - uses: ThangNguyen0495/execute-appium-android-test@main
        with:
          test_name: ${{ env.test_name }}
          scripts: |
            echo '${{ secrets.ENV_FILES }}' > src/main/resources/config.properties
            echo '${{ vars.APP_URL }}' >> src/main/resources/config.properties
            echo '${{ vars.REUSE_VARIABLE }}' >> src/main/resources/config.properties
            mvn test "-DsuiteFile=src/test/resources/${{ env.TEST_TYPE }}/android/seller/${{ matrix.test_config_path }}"
            

  AndroidBuyer:
    env:
      TEST_TYPE: ${{ github.event.inputs.testType == 'Smoke Test' && 'smoke' || 'regression' }}
    strategy:
      fail-fast: false
      matrix:
        test_config_path:
          - AndroidGoBuyerProductDetail.xml
    runs-on: ubuntu-latest
    if: github.event.inputs.platform == 'Android Buyer' || github.event.inputs.platform == 'All Platforms'
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Extract test name from config path
        run: |
          test_name=$(basename "${{ matrix.test_config_path }}" .xml)
          echo "test_name=$test_name" >> $GITHUB_ENV

      - uses: ThangNguyen0495/execute-appium-android-test@main
        with:
          test_name: ${{ env.test_name }}
          scripts: |
            echo '${{ secrets.ENV_FILES }}' > src/main/resources/config.properties
            echo '${{ vars.APP_URL }}' >> src/main/resources/config.properties
            echo '${{ vars.REUSE_VARIABLE }}' >> src/main/resources/config.properties
            mvn test "-DsuiteFile=src/test/resources/${{ env.TEST_TYPE }}/android/buyer/${{ matrix.test_config_path }}"

  iOSSeller:
    env:
      TEST_TYPE: ${{ github.event.inputs.testType == 'Smoke Test' && 'smoke' || 'regression' }}
    strategy:
      fail-fast: false
      matrix:
        test_config_path:
          - IOSGoSELLERCreateProductTest.xml
          - IOSGoSELLERUpdateProductTest.xml
          - IOSGoSELLERSupplierTest.xml
    runs-on: macos-latest
    if: github.event.inputs.platform == 'iOS Seller' || github.event.inputs.platform == 'All Platforms'
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Create an iOS simulator
        uses: ThangNguyen0495/create-ios-simulator@main

      - name: Save simulator UDID to GitHub Environment
        run: |
          UDID=$(cat udid.txt)
          echo "UDID=$UDID" >> $GITHUB_ENV

      - name: Extract test name from config path
        run: |
          test_name=$(basename "${{ matrix.test_config_path }}" .xml)
          echo "test_name=$test_name" >> $GITHUB_ENV

      - uses: ThangNguyen0495/execute-appium-ios-test@main
        with:
          test_name: ${{ env.test_name }}
          scripts: |
            echo '${{ secrets.ENV_FILES }}' > src/main/resources/config.properties
            echo '${{ vars.APP_URL }}' >> src/main/resources/config.properties
            echo '${{ vars.REUSE_VARIABLE }}' >> src/main/resources/config.properties
            echo 'iosSimulatorUdid=${{ env.UDID }}' >> src/main/resources/config.properties
            mvn test "-DsuiteFile=src/test/resources/${{ env.TEST_TYPE }}/ios/seller/${{ matrix.test_config_path }}"

  iOSBuyer:
    env:
      TEST_TYPE: ${{ github.event.inputs.testType == 'Smoke Test' && 'smoke' || 'regression' }}
    strategy:
      fail-fast: false
      matrix:
        test_config_path:
          - IOSGoBuyerProductDetail.xml
    runs-on: macos-latest
    if: github.event.inputs.platform == 'iOS Buyer' || github.event.inputs.platform == 'All Platforms'
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Create an iOS simulator
        uses: ThangNguyen0495/create-ios-simulator@main

      - name: Save simulator UDID to GitHub Environment
        run: |
          UDID=$(cat udid.txt)
          echo "UDID=$UDID" >> $GITHUB_ENV

      - name: Extract test name from config path
        run: |
          test_name=$(basename "${{ matrix.test_config_path }}" .xml)
          echo "test_name=$test_name" >> $GITHUB_ENV

      - uses: ThangNguyen0495/execute-appium-ios-test@main
        with:
          test_name: ${{ env.test_name }}
          scripts: |
            echo '${{ secrets.ENV_FILES }}' > src/main/resources/config.properties
            echo '${{ vars.APP_URL }}' >> src/main/resources/config.properties
            echo '${{ vars.REUSE_VARIABLE }}' >> src/main/resources/config.properties
            echo 'iosSimulatorUdid=${{ env.UDID }}' >> src/main/resources/config.properties
            mvn test "-DsuiteFile=src/test/resources/${{ env.TEST_TYPE }}/ios/buyer/${{ matrix.test_config_path }}"